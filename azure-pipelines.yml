# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

steps:
- task: Bash@3
  inputs:
      targetType: 'inline'
      script: |
        docker network create grid
        docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub:4.18.1-20240224
        docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \
          --shm-size="2g" \
          -e SE_EVENT_BUS_PUBLISH_PORT=4442 \
          -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \
          selenium/node-chrome:4.18.1-20240224
        docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \
          --shm-size="2g" \
          -e SE_EVENT_BUS_PUBLISH_PORT=4442 \
          -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \
          selenium/node-edge:4.18.1-20240224
        docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \
          --shm-size="2g" \
          -e SE_EVENT_BUS_PUBLISH_PORT=4442 \
          -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \
          selenium/node-firefox:4.18.1-20240224

        export ASSETS='$(Build.ArtifactStagingDirectory)'
        echo $ASSETS
        printenv
- task: Maven@4
  inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: 'default'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      goals: 'test'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'screenshots'
    publishLocation: 'Container'